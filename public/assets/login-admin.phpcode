<?php

use Drupal\Core\DrupalKernel;
use Drupal\Core\Site\Settings;
use Drupal\user\Entity\User;
use Symfony\Component\HttpFoundation\Request;

$stdErr = fopen('php://stderr', 'w');

set_error_handler(function (...$args) use ($stdErr, &$errors) {
    fwrite($stdErr, print_r($args, 1));
});

$flavor = file_get_contents('/config/flavor.txt');
$docroot = '/persist/' . $flavor;

chdir($docroot . '/web');


$class_loader = require $docroot . '/vendor/autoload.php';

$kernel = new DrupalKernel('prod', $class_loader);
$request = Request::createFromGlobals();
$request->server->set('REMOTE_ADDR', '127.0.0.1');
$request->server->set('SCRIPT_NAME', 'index.php');
DrupalKernel::bootEnvironment();
Settings::initialize($docroot, 'sites/default', $class_loader);
$kernel->setSitePath('sites/default');
$kernel->boot();
$kernel->preHandle($request);

// mimic \Drupal\Core\StackMiddleware\Session::handle
/** @var \Symfony\Component\HttpFoundation\Session\Session $session */
$session = \Drupal::service('session');
$session->start();
$request->setSession($session);


$account = User::load(1);
user_login_finalize($account);

try {
    $session->save();
} catch (\Throwable $e) {
    print json_encode([
            'message' => 'could not get login session',
            'trace' => $e->getTraceAsString(),
            'type' => 'login',
        ], JSON_THROW_ON_ERROR) . PHP_EOL;
    exit(1);
}

/** @var \Drupal\Core\Session\SessionConfiguration $sessionConfig */
$sessionConfig = \Drupal::service('session_configuration');
$sessionOptions = $sessionConfig->getOptions($request);

$sessions = \Drupal::database()->query('SELECT * FROM {sessions}')->fetchAll();

print json_encode([
        'params' => [
            'name' => $session->getName(),
            'id' => $session->getId(),
        ],
        'type' => 'set_cookie',
    ], JSON_THROW_ON_ERROR) . PHP_EOL;
